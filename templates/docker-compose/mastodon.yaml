version: '3'
# Mastodon Glitch Edition stack
# Page: https://glitch-soc.github.io/docs/
# Code: https://github.com/glitch-soc/mastodon
# glitch-soc is a friendly fork of the open-source social media software
# Mastodon, with the aim of providing additional features at the risk of
# potentially less stable software.

services:
  db:
    restart: unless-stopped
    image: postgres:14-alpine
    shm_size: 256mb
    networks:
      - internal_network
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'postgres']
    volumes:
      - postgres14:/var/lib/postgresql/data
      - postgres14-tmp:/tmp/backup
    environment:
      - 'POSTGRES_HOST_AUTH_METHOD=trust'
    labels:
      - "docker-volume-backup.exec-pre-backup=pg_dump -U postgres -f /tmp/backup/mastodon.pg_dump.sql -x mastodon"
      - "docker-volume-backup.exec-post-backup=rm -rfv /tmp/backup/*"

  redis:
    restart: unless-stopped
    image: redis:7-alpine
    networks:
      - internal_network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
    volumes:
      - redis:/data

# https://kartheektechie.wordpress.com/2016/06/11/elasticsearch-backup-script-with-snapshot-rotation/
  es:
    restart: unless-stopped
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.4
    environment:
#      - "path.repo=[\"/usr/share/elasticsearch/tmp\"]"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m -Des.enforce.bootstrap.checks=true"
      - "xpack.license.self_generated.type=basic"
      - "xpack.security.enabled=false"
      - "xpack.watcher.enabled=false"
      - "xpack.graph.enabled=false"
      - "xpack.ml.enabled=false"
      - "bootstrap.memory_lock=true"
      - "cluster.name=es-mastodon"
      - "discovery.type=single-node"
      - "thread_pool.write.queue_size=1000"
    networks:
       - external_network
       - internal_network
    healthcheck:
       test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
#      - elasticsearch-tmp:/usr/share/elasticsearch/tmp
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - '127.0.0.1:9200:9200'
#    labels:
#      - "docker-volume-backup.exec-pre-backup=curl -X PUT http://localhost:9200/_snapshot/auto_snapshot?wait_for_completion=true&pretty"
#      - "docker-volume-backup.exec-post-backup=rm -rfv /usr/share/elasticsearch/tmp/"

  web:
    image: ghcr.io/glitch-soc/mastodon:latest
    restart: unless-stopped
    env_file: ../../mastodon.env
    command: bash -c "rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000"
    networks:
      - external_network
      - internal_network
    healthcheck:
      # prettier-ignore
      test: ['CMD-SHELL', 'wget -q --spider --proxy=off localhost:3000/health || exit 1']
    ports:
      - '127.0.0.1:3000:3000'
    depends_on:
      - db
      - redis
      - es
    volumes:
      - /home/mastodon/live/public/system:/mastodon/public/system
      - /home/mastodon/mastodon_scripts:/scripts

  streaming:
    image: ghcr.io/glitch-soc/mastodon:latest
    restart: unless-stopped
    env_file: ../../mastodon.env
    command: node ./streaming
    networks:
      - external_network
      - internal_network
    healthcheck:
      # prettier-ignore
      test: ['CMD-SHELL', 'wget -q --spider --proxy=off localhost:4000/api/v1/streaming/health || exit 1']
    ports:
      - '127.0.0.1:4000:4000'
    depends_on:
      - db
      - redis
    volumes:
      - /home/mastodon/mastodon_scripts:/scripts

  sidekiq:
    image: ghcr.io/glitch-soc/mastodon:latest
    restart: unless-stopped
    env_file: ../../mastodon.env
    command: bundle exec sidekiq
    depends_on:
      - db
      - redis
    networks:
      - external_network
      - internal_network
    volumes:
      - /home/mastodon/live/public/system:/mastodon/public/system
      - /home/mastodon/mastodon_scripts:/scripts
    healthcheck:
      test: ['CMD-SHELL', "ps aux | grep '[s]idekiq\ 6' || false"]

  post-update:
    image: ghcr.io/glitch-soc/mastodon:latest
    restart: "no"
    env_file: ../../mastodon.env
    command: bash -c "bundle install && yarn install && bin/tootctl cache clear && bundle exec rails db:migrate && bundle exec rails assets:precompile && sleep 1h"
    depends_on:
      - db
      - redis
    networks:
      - external_network
      - internal_network
    volumes:
      - /home/mastodon/live/public/system:/mastodon/public/system
      - /home/mastodon/mastodon_scripts:/scripts

  backup:
    image: jareware/docker-volume-backup:2.6.0
    depends_on:
      - db
#      - es
    restart: unless-stopped
    environment:
      - CHECK_HOST=db
      - TZ=Europe/Warsaw
    networks:
      - internal_network
    volumes:
      - postgres14-tmp:/backup/postgres14:ro
#      - elasticsearch-tmp:/backup/elasticsearch:ro
      - /var/backups/docker:/archive
      - /var/run/docker.sock:/var/run/docker.sock:ro

networks:
  external_network:
  internal_network:
    internal: true

volumes:
  postgres14:
  postgres14-tmp:
  redis:
  elasticsearch:
#  elasticsearch-tmp: