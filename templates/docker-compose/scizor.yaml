version: "3.9"
# Red-DiscordBot stack
# Page: https://docs.discord.red/
# Code: https://github.com/Cog-Creators/Red-DiscordBot
# Red is a fully modular bot – meaning all features and commands can be
# enabled/disabled to your liking, making it completely customizable. This is
# a self-hosted bot – meaning you will need to host and maintain your own
# instance. You can turn Red into an admin bot, music bot, trivia bot, new
# best friend or all of these together!

services:

  scizor:
    image: phasecorex/red-discordbot:full
    depends_on:
      - postgres

    restart: unless-stopped
    healthcheck:
      test: 'xargs -0 < /proc/$$(pidof -s python)/cmdline | grep -iqE "\sredbot\s" && grep -iqE "^state:\s+[rds]" /proc/$$(pidof -s python)/status || exit 1'
    volumes:
      - scizor:/data
    environment:
      - TOKEN
      - PREFIX
      - TZ
      - STORAGE_TYPE

  postgres:
    image: postgres:alpine
    restart: unless-stopped
    healthcheck:
      test: pg_isready -q || exit 1
    volumes:
      - postgres:/var/lib/postgresql/data
    secrets:
      - source: postgres-password
        target: /run/secrets/postgres-secret
    environment:
      - POSTGRES_PASSWORD_FILE
      - POSTGRES_USER
      - POSTGRES_DB

  #setup:
  #  image: phasecorex/red-discordbot:full
  #  depends_on:
  #    - postgres
  #  entrypoint: ['/bin/sh', '-c', 'sed -i "s/\"DATA_PATH\": \".*\",$$/\"DATA_PATH\": \"\/data\",/m" /data/config.json && sed -i "s/\"${SOURCE_INSTANCE}\":\s*{$$/\"docker\": {/m" /data/config.json && cat /data/config.json && echo "" && redbot-setup convert docker postgres']
  #  restart: "no"
  #  stdin_open: true
  #  tty: true
  #  volumes:
  #    - scizor:/data
  #  environment:
  #    - TOKEN
  #    - PREFIX
  #    - TZ
  #    - STORAGE_TYPE

secrets:
  postgres-password:
    external: true
    name: scizor_postgres_password

volumes:
  postgres:
  scizor: